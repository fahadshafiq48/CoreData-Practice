//
//  RemindersListInteractor.swift
//  Fahad Test
//
//  Created by Mac on 21/11/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol RemindersListBusinessLogic {
    func getList(request: RemindersList.GetList.Request)
    func getLocalList()
}

protocol RemindersListDataStore {}

class RemindersListInteractor: Interactor, RemindersListBusinessLogic, RemindersListDataStore {
    
    var presenterRemindersList: RemindersListPresenter? {
        return presenter as? RemindersListPresenter
    }
    
    var worker: RemindersListWorker = RemindersListWorker()
    var localDbWorker: RemindersListLocalDBWorker = RemindersListLocalDBWorker()
    
    var dataSource = [ListModel]()
    
    func getList(request: RemindersList.GetList.Request) {
        worker.doFetchList(request: request) { [weak self] items, error in
            guard let weakSelf = self else { return }
            weakSelf.dataSource.removeAll()
            weakSelf.dataSource = items ?? []
            weakSelf.localDbWorker.doSaveLocalList(items: items ?? [])
            
            let response = RemindersList.GetList.Response(items: items, error: error)
            weakSelf.presenterRemindersList?.presentList(response: response)
        }
    }
    
    func getLocalList() {
        dataSource.removeAll()
        dataSource = localDbWorker.doFetchLocalList()
        presenterRemindersList?.presentLocalList()
    }
}
